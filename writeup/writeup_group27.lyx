#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Can we (artificially) understand Seinfeld's humor?
\end_layout

\begin_layout Author
Dan Kufra (‫‪30219082-2‬‬, dank) [
\begin_inset CommandInset href
LatexCommand href
target "dan.kufra@mail.huji.ac.il"
type "mailto:"
literal "false"

\end_inset

]
\begin_inset Newline newline
\end_inset

Yuval Jacoby (30224707-7, yuvalja) [
\begin_inset CommandInset href
LatexCommand href
target "yuval.jacoby@mail.huji.ac.il"
type "mailto:"
literal "false"

\end_inset

]
\begin_inset Newline newline
\end_inset

Alon Netser (31160253-6, alonnetser) [
\begin_inset CommandInset href
LatexCommand href
target "alon.netser@mail.huji.ac.il"
type "mailto:"
literal "false"

\end_inset

]
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Abstract
Who among us isn't familier with the hilarious sitcom 
\begin_inset Quotes eld
\end_inset

Seinfeld
\begin_inset Quotes erd
\end_inset

? We all laughed from Jerry's stand-up scenes (
\begin_inset CommandInset href
LatexCommand href
name "YouTube"
target "https://www.youtube.com/watch?v=Qe9YzGYDJk8"
literal "false"

\end_inset

), George Costanza ridiculous behaviour (
\begin_inset CommandInset href
LatexCommand href
name "YouTube"
target "https://www.youtube.com/watch?v=XoMx_5KuUkI"
literal "false"

\end_inset

), Kramer facial expressions and bursting into the room (
\begin_inset CommandInset href
LatexCommand href
name "YouTube"
target "https://www.youtube.com/watch?v=epmvG3pjpu0"
literal "false"

\end_inset

), and Elaine pushing everyone away and shouting 
\begin_inset Quotes eld
\end_inset

Get Out!
\begin_inset Quotes erd
\end_inset

 (
\begin_inset CommandInset href
LatexCommand href
name "YouTube"
target "https://www.youtube.com/watch?v=JBgcgQD5bJs"
literal "false"

\end_inset

).
 
\end_layout

\begin_layout Abstract
The main question we ask is - can we build a model to understand this humor
 like we do?
\end_layout

\begin_layout Section
Problem Descrpition
\end_layout

\begin_layout Standard
We want to build a model that 
\begin_inset Quotes eld
\end_inset

understand humor
\begin_inset Quotes erd
\end_inset

, i.e.
 given the text of a scene in Seinfeld, will predict funniness for each
 sentences said.
\end_layout

\begin_layout Standard
First, we validate the data.
 We find certain flaws and think about how to deal with them.
 Second, we analyze the data and visualize its content.
 Last, (just for the fun of it) we visualize the connections between the
 different characters in the show, and build an interactive graph describing
 these relations.
\end_layout

\begin_layout Subsection
Difficulties
\end_layout

\begin_layout Standard
There are many difficalties regarding this problem.
\end_layout

\begin_layout Standard
Here are a few:
\end_layout

\begin_layout Subsubsection
Funny is not taken only from the text
\end_layout

\begin_layout Standard
When we watch Seinfeld and laugh, it is not only from of the text.
 Most of the times it affected from the tone the person was saying that
 sentence, when he emphasized, and more generally the whole scene's video.
 This is the case most of the times in Kramer funny scenes when he enters
 the room demonstratively and 
\begin_inset Quotes eld
\end_inset

in a funny way
\begin_inset Quotes erd
\end_inset

.
 These aspects are not always obvious from the text iteself.
\end_layout

\begin_layout Standard
Indeed, if you try to read the subtitles for a specific Seinfeld's episode,
 you would not always realize what is so funny.
 
\end_layout

\begin_layout Standard
This leaves us with the question - if we, as human beings, can not always
 realize funniness from the text alone, how can we expect a computer to
 do that?
\end_layout

\begin_layout Subsubsection
Subjectivity of Funny
\end_layout

\begin_layout Standard
The laugh-track does not necesarily mean that this is funny.
 After all, Seinfeld is a TV show and the goal of its writers it to profit.
 If you want people to enjoy your show it is essential to encourage them
 to laugh, and this is done by adding the 
\begin_inset Quotes eld
\end_inset

laugh-track
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
First of all, this issue is not that severe.
 Indeed, the laugh-track does not always indicates funniness, but the writers
 who decided to add the laugh-track at a certain position certainly thought
 that this might be funny.
 Therefore, learning when a laugh-track will occur is also interesting because
 it is the same as given a sentence, predict if some human-being thought
 it might be funny.
\end_layout

\begin_layout Standard
Second, the accuracy of the laugh-track is quite good.
 Most of the times there is a laugh-track there is indeed something funny
 going on.
 Moreover, the coverage of the laugh-track is quite close to 100%, i.e.
 there is (almost) no funny line that is lacking a laugh-track.
\end_layout

\begin_layout Standard
Anyway, this issue is the reality and we can not change it.
 Even if we would label the sentences by ourself, it would still mean that
 some human-being (i.e.
 us) is thinking there are funny.
 it does not neccesarily mean that another person will think it's funny.
\end_layout

\begin_layout Standard
To conclude, we can be more precise and say that our goal is to predict
 when a sentence is supposed to be funny, as the Seinfeld authors decided.
\end_layout

\begin_layout Subsubsection
Context
\end_layout

\begin_layout Standard
The other (many) difficulties ragarding natural-language-processing that
 were mentioned in the lecture also affect us (ambiguity, language is not
 static, etc).
\end_layout

\begin_layout Standard
Morever, the context is really important in understanding humor.
 When we watch an episode of Seinfeld we understand the overall topic, and
 remember events that occured previously in the episode (and even in other
 episodes).
 In order to make the computer understand the humor as well, we must use
 a model that is capable of understanding context and 
\begin_inset Quotes eld
\end_inset

remember
\begin_inset Quotes erd
\end_inset

 important stuff.
\end_layout

\begin_layout Section
Data
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
The data we use is basically Seinfeld's subtitles, coupled with the speaking
 character.
 In addition, we have the exact time in which every character's sentence
 begins and ends, and the exact times in which the laughter occured.
\end_layout

\begin_layout Standard
We downloaded the dataset from 
\begin_inset CommandInset href
LatexCommand href
name "GitHub"
target "https://github.com/ranyadshalom/seinfeld_laugh_corpus"
literal "false"

\end_inset

, and we thank 
\begin_inset CommandInset href
LatexCommand href
name "Ran Yad Shalom"
target "ranyadshalom@gmail.com"
type "mailto:"
literal "false"

\end_inset

 and 
\begin_inset CommandInset href
LatexCommand href
name "Yoav Golberg"
target "https://www.cs.bgu.ac.il/~yoavg/uni/"
literal "false"

\end_inset

 for the great dataset they built 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

.
\end_layout

\begin_layout Subsection
Specs
\end_layout

\begin_layout Standard
The dataset contains 96 humor annotated “Seinfeld” screenplays, along with
 the timing of the laughter and the timing of the dialog.
 
\end_layout

\begin_layout Standard
R.
 Y.
 Shalom and Y.
 Golberg 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 got the subtitles from 
\begin_inset CommandInset href
LatexCommand href
target "opensubtitles.org"
literal "false"

\end_inset

, the scripts from 
\begin_inset CommandInset href
LatexCommand href
name "seinology.com"
target "http://www.seinology.com/scripts-english.shtml"
literal "false"

\end_inset

 and used the audio tracks to extract the exact timing of the laugh-tracks.
 Furthermore, they used quite sophisticated techniches to align the subtitles
 with the exact timing, and attach the speaking character for every sentence
 using the scripts.
\end_layout

\begin_layout Standard
Due to the technic used by 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 to build the data (using the fact that the dialogs were recorded in mono,
 and the laugh-track in stereo) we have the episodes starting at season
 4 episode 6.
 This is because the previous episodes were not recorded this way.
\end_layout

\begin_layout Standard
The final dataset contains 96 episodes, with 46,497 sentences in total.
 We took the raw data from the GitHub repository and inserted it into a
 pandas DataFrame, and added several useful attributes.
 Each sentence is associated with several properties:
\end_layout

\begin_layout Itemize
'character': The speaking character.
\end_layout

\begin_layout Itemize
'txt': The text.
\end_layout

\begin_layout Itemize
'start': Start time (in seconds).
\end_layout

\begin_layout Itemize
'end': End time (in seconds).
\end_layout

\begin_layout Itemize
'is_funny': Whether a laugh occured after this sentence or not.
\end_layout

\begin_layout Itemize
'laugh_time': If this sentence is funny, this is the duration of the laugh
 (in seconds).
 Note that if the sentence was not funny, this is set to NaN.
\end_layout

\begin_layout Itemize
Various meta-data about the episode, such as 'season' (season's number),
 'episode_num', 'episode_name', 'total_lines', 'global_episode_num' (in
 the whole dataset).
\end_layout

\begin_layout Itemize
Useful features of the sentence, such as 'num_words', 'length' (in seconds),
 'line_num' (in the episode), 'avg_word_length' (in letters).
\end_layout

\begin_layout Subsection
Data Validation - no dataset is perfect in our world...
\end_layout

\begin_layout Remark*
This section was done in an interactive Jupyter Notebook named 'Data_Cleaning.ipy
nb'.
 You are more than welcome to take a look!
\end_layout

\begin_layout Standard
The first task we addressed was analyzing the dataset and validate it.
\end_layout

\begin_layout Standard
We watched several episodes and looked at the dataset at the same time.
\end_layout

\begin_layout Standard
We saw that the text is pretty accurate, subject to minor changes the man
 (or machine) who translated it did.
 These changes are not really an influence to our task, because most of
 the time they have the same meaning.
 For example, "You met her in the supermrket.
 How did you do that?" is shorten to "You met her in the supermrket.
 How?".
 For humor detection, this is not really a severe issue.
\end_layout

\begin_layout Standard
The timing of the talking are also pretty accurate, and by reading the paper
 of Ran Yad-Shalom 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"
literal "true"

\end_inset

 who created this dataset he addressed this issue specifically and payed
 extra attention to take several subtitles and choose the one that is best
 aligned with the audio.
 His job here is pretty impressive.
\end_layout

\begin_layout Subsubsection
The first flaw: the laugh-tracks
\end_layout

\begin_layout Standard
The laugh tracks are not perfect.
 It's mostly labeled correctly, but there are some false-positives.
 Also, the timing of the laughs are not measured perfectly.
 It's quite understandable, because in the show it's also not so obvious
 when the laugh start and when it ends.
 Extracting it automatically by analyzing the audio (like Ran Yad-Shalom
 did) seems pretty challenging.
 However, because most of the time it's actually labels correctly, we treat
 this as acceptable noise in our dataset and continue with our work.
\end_layout

\begin_layout Subsubsection
The second flaw: the speaking character is sometime mislabeled.
\end_layout

\begin_layout Standard
We noticed that the speaking characters sometime is not correct.
 We found an attribute that might be the cause for mistakes in the speaking
 character labels - one character speaking a lot of sentences in a row.
 It seems that while building the dataset, some characters labels 
\begin_inset Quotes eld
\end_inset

get stuck
\begin_inset Quotes erd
\end_inset

 and the same character (possibly wrongly) is labeled as the one speaking.
 
\end_layout

\begin_layout Standard
We found that this is often when some character is speaking more that 10
 sentences in a row.
 Indeed, this is quite rare for the same character to speak more than 10
 sentences in a row.
 There are exceptions of course, for example when a person is talking over
 the phone (and the other side is not heard), or when Jerry is doing his
 stand-up scenes.
\end_layout

\begin_layout Standard
We tried to capture the mistakes in the talking character by the amount
 of sentences he is saying in a row.
 To do this, we collected all these cases, and analyzed them statistically.
 We saw that the mean sentences-in-a-row is around 1, and that 99% of the
 times it is below 8.
\end_layout

\begin_layout Standard
Our solution was to mark these speaking characters as 'unknown', but keep
 the other attributes (such as text, duration, funniness, etc).
 Indeed, there is no reason to remove these line from the dataset - most
 of it is correct, the only part that is not correct is the talking character.
 We can still use the funniness and the words in the sentence.
 In models where we take the talking character into account, we need to
 ignore these.
 But in other models - it's perfectly OK.
\end_layout

\begin_layout Subsection
Data Visualizations
\end_layout

\begin_layout Remark*
This section was done in an interactive Jupyter Notebook named 'Visualizations.ip
ynb'.
 You are more than welcome to take a look!
\end_layout

\begin_layout Standard
We tried to visualize several aspects of the data, in order to get more
 insight about it and get ideas about how to solve it.
\end_layout

\begin_layout Standard
First of all, we tried to see if funny sentences are longer (generally speaking).
 We saw that the distributions of the length / #words is different between
 funny and not-funny sentences.
 However, these differences are not so significant, as the standard deviations
 of the length is also pretty high.
 Nevertheless, we can say that the length of the sentence is a features
 that might help in classifing it as funny/not-funny.
 Moreover, we found the the length in seconds and the length in #word behave
 different.
 For example, Elaine's mean #words is quite similar in funny/not-funny sentences
 (about 5.71), but the length in seconds is quite different (2 v.s.
 2.5).
\end_layout

\begin_layout Standard
Our conclusions from this visualization is to add more features to the sentence,
 such as #words, length (in seconds), speech-rate (words per second), etc.
 Afterwards, we saw that the results actually improved when we gave them
 these features.
\end_layout

\begin_layout Standard
Another nice visualtions we did was to analyze the speaking characters.
 One thing was to make a word-cloud for each character, as well as to separate
 for funny/not-funny sentences and see if we can see any difference.
 Beside everything, these word-clouds are just fun to look at.
 We can see that there are many common frequent words between funny/not-funny
 sentences.
 However, we can see some interesting issues.
 For example, in Jerry's not-funny sentences the word 'Elaine' is more common.
 Can we learn that when Jerry says 'Elaine' in a sentence it is less likely
 to be funny?
\end_layout

\begin_layout Standard
Another nice visualization was the characters-graph, containing the different
 characters and their connections.
 Each edge's weight is proportional to the amount of times the characters
 spoke to each other.
 One can see perfectly the 
\begin_inset Quotes eld
\end_inset

community
\begin_inset Quotes erd
\end_inset

 of the 4 main characters (Jerry, George, Kramer and Elaine), as well as
 other secondary characters (such as George parents Monty and Helen).
\end_layout

\begin_layout Section
Experiments
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Section
Future Work
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"
literal "true"

\end_inset

 Ran Yad-Shalom and Yoav Goldberg, The Seinfeld Corpus: A Method for Generating
 A Humor Annotated Corpus and An Analysis of That Corpus.
 Computer Science Department, Bar-Ilan University, Israel, 2017.
\end_layout

\end_body
\end_document
